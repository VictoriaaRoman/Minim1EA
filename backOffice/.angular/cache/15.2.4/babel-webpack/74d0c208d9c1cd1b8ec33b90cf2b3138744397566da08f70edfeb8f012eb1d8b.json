{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LocalizacionService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.endpoint;\n  }\n  getListLocalizaciones() {\n    const myApiUrl = 'localizacion/all';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  deleteLocalizacion(id) {\n    const myApiUrl = 'localizacion/';\n    return this.http.delete(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  crateLocalizacion(producto) {\n    const myApiUrl = 'localizacion/';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, producto);\n  }\n  getLocalizacion(id) {\n    const myApiUrl = 'localizacion/';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  updateLocalizacion(id, product) {\n    const myApiUrl = 'localizacion/';\n    return this.http.put(`${this.myAppUrl}${myApiUrl}${id}`, product);\n  }\n  insertTicketTolocalizacion(idLocalizacion, idTicket) {\n    const myApiUrl = 'localizacion/insert';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, {\n      \"idLocalizacion\": `${idLocalizacion}`,\n      \"idTicket\": `${idTicket}`\n    });\n  }\n  getTicketLocalizacion(id) {\n    const myApiUrl = `localizacion/${id}/ticket`;\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n}\nLocalizacionService.ɵfac = function LocalizacionService_Factory(t) {\n  return new (t || LocalizacionService)(i0.ɵɵinject(i1.HttpClient));\n};\nLocalizacionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LocalizacionService,\n  factory: LocalizacionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAGJ,WAAW,CAACK,QAAQ;EAGtC;EAEAC,qBAAqB;IACnB,MAAMC,QAAQ,GAAW,kBAAkB;IAC3C,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAiB,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,EAAE,CAAC;EACrE;EAEAE,kBAAkB,CAACC,EAAM;IACvB,MAAMH,QAAQ,GAAW,eAAe;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACQ,MAAM,CAAO,GAAG,IAAI,CAACP,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,CAAC;EAEnE;EAEAE,iBAAiB,CAACC,QAAsB;IACtC,MAAMN,QAAQ,GAAW,eAAe;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACW,IAAI,CAAe,GAAG,IAAI,CAACV,QAAQ,GAAGG,QAAQ,EAAE,EAAEM,QAAQ,CAAC;EAC9E;EAEAE,eAAe,CAACL,EAAU;IACxB,MAAMH,QAAQ,GAAW,eAAe;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAe,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,CAAC;EACxE;EAEAM,kBAAkB,CAACN,EAAU,EAAEO,OAAqB;IAClD,MAAMV,QAAQ,GAAW,eAAe;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACe,GAAG,CAAe,GAAG,IAAI,CAACd,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,EAAEO,OAAO,CAAC;EACjF;EAEAE,0BAA0B,CAACC,cAAsB,EAAEC,QAAgB;IACjE,MAAMd,QAAQ,GAAW,qBAAqB;IAC9C,OAAO,IAAI,CAACJ,IAAI,CAACW,IAAI,CAAe,GAAG,IAAI,CAACV,QAAQ,GAAGG,QAAQ,EAAE,EAAC;MAChE,gBAAgB,EAAC,GAAGa,cAAc,EAAE;MACpC,UAAU,EAAC,GAAGC,QAAQ;KACzB,CAAC;EACF;EAEAC,qBAAqB,CAACZ,EAAU;IAC9B,MAAMH,QAAQ,GAAW,gBAAgBG,EAAE,SAAS;IACpD,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAiB,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,EAAE,CAAC;EACrE;;AA/CWN,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAsB,SAAnBtB,mBAAmB;EAAAuB,YAFlB;AAAM","names":["environment","LocalizacionService","constructor","http","myAppUrl","endpoint","getListLocalizaciones","myApiUrl","get","deleteLocalizacion","id","delete","crateLocalizacion","producto","post","getLocalizacion","updateLocalizacion","product","put","insertTicketTolocalizacion","idLocalizacion","idTicket","getTicketLocalizacion","factory","providedIn"],"sourceRoot":"","sources":["/Users/victoriaromangarrido/Desktop/Uni/3B-Q2/EA/Minim1/Minim1EA_BackOffice/backOffice/src/app/services/localizacion.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ID, Localizacion } from '../interfaces/localizacion';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalizacionService {\n  \n  private myAppUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.myAppUrl = environment.endpoint;\n\n    \n  }\n\n  getListLocalizaciones(): Observable<Localizacion[]> {\n    const myApiUrl: string = 'localizacion/all'\n    return this.http.get<Localizacion[]>(`${this.myAppUrl}${myApiUrl}`)\n  }\n\n  deleteLocalizacion(id: ID): Observable<void> {\n    const myApiUrl: string = 'localizacion/'\n    return this.http.delete<void>(`${this.myAppUrl}${myApiUrl}${id}`)\n\n  }\n\n  crateLocalizacion(producto: Localizacion): Observable<Localizacion> {\n    const myApiUrl: string = 'localizacion/'\n    return this.http.post<Localizacion>(`${this.myAppUrl}${myApiUrl}`, producto);\n  }\n\n  getLocalizacion(id: string): Observable<Localizacion> {\n    const myApiUrl: string = 'localizacion/';\n    return this.http.get<Localizacion>(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n\n  updateLocalizacion(id: string, product: Localizacion): Observable<Localizacion> {\n    const myApiUrl: string = 'localizacion/';\n    return this.http.put<Localizacion>(`${this.myAppUrl}${myApiUrl}${id}`, product);\n  }\n\n  insertTicketTolocalizacion(idLocalizacion: string, idTicket: string): Observable<Localizacion> {\n    const myApiUrl: string = 'localizacion/insert'\n    return this.http.post<Localizacion>(`${this.myAppUrl}${myApiUrl}`,{\n      \"idLocalizacion\":`${idLocalizacion}`,\n      \"idTicket\":`${idTicket}`\n  });\n  }\n\n  getTicketLocalizacion(id: string) {\n    const myApiUrl: string = `localizacion/${id}/ticket`;\n    return this.http.get<Localizacion[]>(`${this.myAppUrl}${myApiUrl}`)\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}